{"ast":null,"code":"const cardValues = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'ACE', 'JACK', 'QUEEN', 'KING'];\nexport const compareValues = ({\n  previousCardValue,\n  currentCardValue,\n  bet\n}) => {\n  const previousCardValueIndex = cardValues.indexOf(previousCardValue);\n  const currentCardValueIndex = cardValues.indexOf(currentCardValue);\n  debugger;\n\n  if (previousCardValueIndex === -1 || currentCardValueIndex == 1) {\n    throw new Error('Not found');\n  }\n\n  if (bet === \"up\" && previousCardValueIndex >= currentCardValueIndex) {\n    return \"lose\";\n  }\n\n  if (bet === \"up\" && previousCardValueIndex < currentCardValueIndex) {\n    return \"win\";\n  }\n\n  if (bet === \"down\" && previousCardValueIndex <= currentCardValueIndex) {\n    return \"lose\";\n  }\n\n  if (bet === \"down\" && previousCardValueIndex > currentCardValueIndex) {\n    return \"win\";\n  }\n};","map":{"version":3,"sources":["/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/utils.js"],"names":["cardValues","compareValues","previousCardValue","currentCardValue","bet","previousCardValueIndex","indexOf","currentCardValueIndex","Error"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CACf,GADe,EAEf,GAFe,EAGf,GAHe,EAIf,GAJe,EAKf,GALe,EAMf,GANe,EAOf,GAPe,EAQf,GARe,EASf,IATe,EAUf,KAVe,EAWf,MAXe,EAYf,OAZe,EAaf,MAbe,CAAnB;AAgBA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,iBAAD;AAAmBC,EAAAA,gBAAnB;AAAoCC,EAAAA;AAApC,CAAD,KAA6C;AACtE,QAAMC,sBAAsB,GAAGL,UAAU,CAACM,OAAX,CAAmBJ,iBAAnB,CAA/B;AACA,QAAMK,qBAAqB,GAAGP,UAAU,CAACM,OAAX,CAAmBH,gBAAnB,CAA9B;AACA;;AAEA,MAAGE,sBAAsB,KAAK,CAAC,CAA5B,IAAiCE,qBAAqB,IAAE,CAA3D,EAA6D;AACzD,UAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACH;;AAED,MAAGJ,GAAG,KAAI,IAAP,IAAeC,sBAAsB,IAAIE,qBAA5C,EAAkE;AAC9D,WAAO,MAAP;AACH;;AACD,MAAGH,GAAG,KAAI,IAAP,IAAeC,sBAAsB,GAAGE,qBAA3C,EAAiE;AAC7D,WAAO,KAAP;AACH;;AAED,MAAGH,GAAG,KAAI,MAAP,IAAiBC,sBAAsB,IAAIE,qBAA9C,EAAoE;AAChE,WAAO,MAAP;AACH;;AACD,MAAGH,GAAG,KAAI,MAAP,IAAiBC,sBAAsB,GAAGE,qBAA7C,EAAmE;AAC/D,WAAO,KAAP;AACH;AACJ,CAtBM","sourcesContent":["const cardValues = [\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    'ACE',\n    'JACK',\n    'QUEEN',\n    'KING'\n];\n\nexport const compareValues = ({previousCardValue,currentCardValue,bet}) =>{\n    const previousCardValueIndex = cardValues.indexOf(previousCardValue)\n    const currentCardValueIndex = cardValues.indexOf(currentCardValue)\n    debugger\n\n    if(previousCardValueIndex === -1 || currentCardValueIndex==1){\n        throw new Error('Not found')\n    }\n\n    if(bet ===\"up\" && previousCardValueIndex >= currentCardValueIndex){\n        return \"lose\"\n    }\n    if(bet ===\"up\" && previousCardValueIndex < currentCardValueIndex){\n        return \"win\"\n    }\n\n    if(bet ===\"down\" && previousCardValueIndex <= currentCardValueIndex){\n        return \"lose\"\n    }\n    if(bet ===\"down\" && previousCardValueIndex > currentCardValueIndex){\n        return \"win\"\n    }\n}"]},"metadata":{},"sourceType":"module"}