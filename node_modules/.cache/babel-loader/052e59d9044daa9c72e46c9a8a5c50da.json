{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://deckofcardsapi.com/api/deck/'\n}); //draw 5 cards for initial hand\n\nexport const createDeckAndDraw = async () => {\n  const {\n    data\n  } = await api.get('new/shuffle', {\n    params: {\n      deck_count: 1\n    }\n  });\n  console.log({\n    data\n  }); //rename\n\n  const {\n    deck_id: deckId\n  } = data;\n  const {\n    data: cardResponse\n  } = await api.get(`${deckId}/draw/`, {\n    params: {\n      count: 5\n    }\n  });\n  console.log((cardResponse.cards, cardResponse.suits)); //return object\n\n  return {\n    cardsArray: cardResponse.cards,\n    deckId: deckId\n  };\n};\nexport const drawFromDeck_2 = async deckId => {\n  const {\n    data: cardResponse\n  } = await api.get(`${deckId}/draw/`, {\n    params: {\n      count: 5\n    }\n  }); //return object\n\n  return {\n    cardsArray: cardResponse.cards\n  };\n};\nexport const drawCardFromDeck = async deckId => {\n  const {\n    data\n  } = await api.get(`${deckId}/draw/`, {\n    params: {\n      count: 1\n    }\n  });\n  const {\n    cards\n  } = data;\n  const {\n    value,\n    image\n  } = cards[0];\n  return {\n    deckId,\n    value,\n    image\n  };\n};","map":{"version":3,"sources":["/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/api.js"],"names":["axios","api","create","baseURL","createDeckAndDraw","data","get","params","deck_count","console","log","deck_id","deckId","cardResponse","count","cards","suits","cardsArray","drawFromDeck_2","drawCardFromDeck","value","image"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAC;AADa,CAAb,CAAZ,C,CAIA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,YAAW;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMJ,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAsB;AACvCC,IAAAA,MAAM,EAAC;AACHC,MAAAA,UAAU,EAAE;AADT;AADgC,GAAtB,CAArB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA;AAAD,GAAZ,EANwC,CAOxC;;AACA,QAAM;AAACM,IAAAA,OAAO,EAACC;AAAT,MAAmBP,IAAzB;AAEA,QAAM;AAACA,IAAAA,IAAI,EAACQ;AAAN,MAAsB,MAAMZ,GAAG,CAACK,GAAJ,CAAS,GAAEM,MAAO,QAAlB,EAA0B;AACxDL,IAAAA,MAAM,EAAC;AACHO,MAAAA,KAAK,EAAC;AADH;AADiD,GAA1B,CAAlC;AAKAL,EAAAA,OAAO,CAACC,GAAR,EAAaG,YAAY,CAACE,KAAb,EAAmBF,YAAY,CAACG,KAA7C,GAfwC,CAgBxC;;AACA,SAAO;AAACC,IAAAA,UAAU,EAACJ,YAAY,CAACE,KAAzB;AAA+BH,IAAAA,MAAM,EAACA;AAAtC,GAAP;AACH,CAlBM;AAoBP,OAAO,MAAMM,cAAc,GAAG,MAAON,MAAP,IAAkB;AAC5C,QAAM;AAACP,IAAAA,IAAI,EAACQ;AAAN,MAAsB,MAAMZ,GAAG,CAACK,GAAJ,CAAS,GAAEM,MAAO,QAAlB,EAA0B;AACxDL,IAAAA,MAAM,EAAC;AACHO,MAAAA,KAAK,EAAC;AADH;AADiD,GAA1B,CAAlC,CAD4C,CAM5C;;AACA,SAAO;AAACG,IAAAA,UAAU,EAACJ,YAAY,CAACE;AAAzB,GAAP;AACH,CARM;AAYP,OAAO,MAAMI,gBAAgB,GAAG,MAAOP,MAAP,IAAkB;AAC9C,QAAM;AAACP,IAAAA;AAAD,MAAS,MAAMJ,GAAG,CAACK,GAAJ,CAAS,GAAEM,MAAO,QAAlB,EAA0B;AAC3CL,IAAAA,MAAM,EAAC;AACHO,MAAAA,KAAK,EAAC;AADH;AADoC,GAA1B,CAArB;AAMA,QAAM;AAACC,IAAAA;AAAD,MAAUV,IAAhB;AACA,QAAM;AAACe,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAgBN,KAAK,CAAC,CAAD,CAA3B;AACA,SAAO;AAACH,IAAAA,MAAD;AAAQQ,IAAAA,KAAR;AAAcC,IAAAA;AAAd,GAAP;AACH,CAVM","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL:'https://deckofcardsapi.com/api/deck/'\n})\n\n//draw 5 cards for initial hand\nexport const createDeckAndDraw = async () =>{\n    const {data} = await api.get('new/shuffle',{\n        params:{\n            deck_count: 1\n        }\n    })\n    console.log({data})\n    //rename\n    const {deck_id:deckId} = data;\n    \n    const {data:cardResponse} = await api.get(`${deckId}/draw/`,{\n        params:{\n            count:5\n        }\n    })\n    console.log((cardResponse.cards,cardResponse.suits))\n    //return object\n    return {cardsArray:cardResponse.cards,deckId:deckId}\n}\n\nexport const drawFromDeck_2 = async (deckId) => {\n    const {data:cardResponse} = await api.get(`${deckId}/draw/`,{\n        params:{\n            count:5\n        }\n    })\n    //return object\n    return {cardsArray:cardResponse.cards}\n}\n\n\n \nexport const drawCardFromDeck = async (deckId) => {\n    const {data} = await api.get(`${deckId}/draw/`,{\n        params:{\n            count:1\n        }\n    })\n\n    const {cards} = data\n    const {value,image} = cards[0]\n    return {deckId,value,image}\n}"]},"metadata":{},"sourceType":"module"}