{"ast":null,"code":"var _jsxFileName = \"/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CardLayout, ScoreLayout } from \"./Layout.component\";\nimport { ButtonsTab } from \"./ButtonsTab\";\nimport { useBoardGame } from \"./cardGameBoard.state\";\nexport const GameBoard = () => {\n  const {\n    cardImageUrl,\n    onButtonClick,\n    result,\n    score,\n    onCardClick,\n    cardImageUrl_2,\n    turn,\n    winner,\n    handleAce\n  } = useBoardGame();\n\n  if (!cardImageUrl) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }, \"loading\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScoreLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, score, turn ? winner === 100 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }\n  }, \"player 1 winner\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 54\n    }\n  }, \"player 1 turn\") : winner === 101 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }\n  }, \"player 2 winner\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 54\n    }\n  }, \"player 2 turn\")), /*#__PURE__*/React.createElement(CardLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, turn ? cardImageUrl.map(eachCardUrl => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: eachCardUrl,\n      onClick: onCardClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }\n    });\n  }) : cardImageUrl_2.map(eachCardUrl => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: eachCardUrl,\n      onClick: onCardClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleAce,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsTab, {\n    onButtonClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), result && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }\n  }, result)));\n};","map":{"version":3,"sources":["/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js"],"names":["React","useEffect","useState","CardLayout","ScoreLayout","ButtonsTab","useBoardGame","GameBoard","cardImageUrl","onButtonClick","result","score","onCardClick","cardImageUrl_2","turn","winner","handleAce","map","eachCardUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,oBAAxC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA,WAA9C;AAA0DC,IAAAA,cAA1D;AAAyEC,IAAAA,IAAzE;AAA8EC,IAAAA,MAA9E;AAAqFC,IAAAA;AAArF,MAAkGV,YAAY,EAApH;;AAEA,MAAI,CAACE,YAAL,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KADH,EAEGG,IAAI,GACDC,MAAM,KAAG,GAAT,gBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAd,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADxC,GAGDA,MAAM,KAAG,GAAT,gBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAd,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAL/C,CADF,eASE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEED,IAAI,GACJN,YAAY,CAACS,GAAb,CAAkBC,WAAD,IAAiB;AAChC,wBAAO;AAAK,MAAA,GAAG,EAAEA,WAAV;AAAuB,MAAA,OAAO,EAAEN,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CADI,GAKJC,cAAc,CAACI,GAAf,CAAoBC,WAAD,IAAiB;AAClC,wBAAO;AAAK,MAAA,GAAG,EAAEA,WAAV;AAAuB,MAAA,OAAO,EAAEN,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAPF,CATF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEI,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAEP,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGC,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAL,CAHb,CAtBF,CADF;AA+BD,CAtCM","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { CardLayout, ScoreLayout } from \"./Layout.component\";\nimport { ButtonsTab } from \"./ButtonsTab\";\n\nimport { useBoardGame } from \"./cardGameBoard.state\";\n\nexport const GameBoard = () => {\n  const { cardImageUrl, onButtonClick, result, score, onCardClick,cardImageUrl_2,turn,winner,handleAce} = useBoardGame();\n\n  if (!cardImageUrl) {\n    return <h1>loading</h1>;\n  }\n\n  return (\n    <div>\n      <ScoreLayout>\n        {score}\n        {turn?\n            winner===100 ?<h1>player 1 winner</h1> : <h1>player 1 turn</h1>\n            :\n            winner===101 ?<h1>player 2 winner</h1> : <h1>player 2 turn</h1>\n        }\n      </ScoreLayout>\n      <CardLayout>\n        {\n        turn ?\n        cardImageUrl.map((eachCardUrl) => {\n          return <img src={eachCardUrl} onClick={onCardClick}></img>;\n        })\n        :\n        cardImageUrl_2.map((eachCardUrl) => {\n          return <img src={eachCardUrl} onClick={onCardClick}></img>;\n        })\n        \n        }\n      </CardLayout>\n      <div>\n        <input type=\"text\" onChange={handleAce}></input>\n        <ButtonsTab onButtonClick={onButtonClick} />\n        {result && <h2>{result}</h2>}\n      </div>\n      \n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}