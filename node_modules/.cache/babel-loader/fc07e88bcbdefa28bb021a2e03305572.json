{"ast":null,"code":"var _jsxFileName = \"/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createDeckAndDraw, drawCardFromDeck } from './api';\nimport { CardLayout } from './Layout.component';\nimport { ButtonsTab } from './ButtonsTab';\nimport { compareValues } from './utils';\nexport const GameBoard = () => {\n  //states\n  const [cardState, setCardState] = useState({\n    cardValue: null,\n    cardImageUrl: null\n  });\n  const [deckId, setDeckId] = useState(null);\n  const [result, setResult] = useState(null); //use effect sychonrous to prevent race conditions\n\n  useEffect(() => {\n    const fetchCardandDeck = async () => {\n      const {\n        deckId,\n        value,\n        image\n      } = await createDeckAndDraw();\n    };\n\n    fetchCardandDeck();\n    setCardState({\n      cardValue: value,\n      cardImageUrl: image\n    });\n    setDeckId(deckId);\n  }, []);\n\n  const onButtonClick = async event => {\n    const bet = event.target.name;\n    const {\n      oldDeckId,\n      newValue,\n      newImage\n    } = await drawCardFromDeck(deckId);\n    const result = compareValues({\n      cardValue,\n      newValue,\n      bet\n    });\n    debugger;\n    console.log(\"Button was clicked\");\n    setResult(result);\n    setCardValue(newValue);\n    setCardImageUrl(newImage);\n  };\n\n  if (!cardImageUrl) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, \"loading\");\n  }\n\n  return /*#__PURE__*/React.createElement(CardLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cardImageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsTab, {\n    onButtonClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), result && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, result));\n};","map":{"version":3,"sources":["/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js"],"names":["React","useEffect","useState","createDeckAndDraw","drawCardFromDeck","CardLayout","ButtonsTab","compareValues","GameBoard","cardState","setCardState","cardValue","cardImageUrl","deckId","setDeckId","result","setResult","fetchCardandDeck","value","image","onButtonClick","event","bet","target","name","oldDeckId","newValue","newImage","console","log","setCardValue","setCardImageUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,OAAlD;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC;AACvCS,IAAAA,SAAS,EAAC,IAD6B;AAEvCC,IAAAA,YAAY,EAAC;AAF0B,GAAD,CAA1C;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAAQC,SAAR,IAAmBd,QAAQ,CAAC,IAAD,CAAjC,CAR2B,CAU3B;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMgB,gBAAgB,GAAG,YAAW;AAChC,YAAM;AAACJ,QAAAA,MAAD;AAASK,QAAAA,KAAT;AAAgBC,QAAAA;AAAhB,UAAyB,MAAMhB,iBAAiB,EAAtD;AACH,KAFD;;AAGAc,IAAAA,gBAAgB;AAChBP,IAAAA,YAAY,CAAC;AACTC,MAAAA,SAAS,EAACO,KADD;AAETN,MAAAA,YAAY,EAACO;AAFJ,KAAD,CAAZ;AAKAL,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAXQ,EAWP,EAXO,CAAT;;AAaA,QAAMO,aAAa,GAAG,MAAOC,KAAP,IAAgB;AAClC,UAAMC,GAAG,GAACD,KAAK,CAACE,MAAN,CAAaC,IAAvB;AACA,UAAM;AAACC,MAAAA,SAAD;AAAWC,MAAAA,QAAX;AAAoBC,MAAAA;AAApB,QAAgC,MAAMvB,gBAAgB,CAACS,MAAD,CAA5D;AAEA,UAAME,MAAM,GAAGR,aAAa,CAAC;AAACI,MAAAA,SAAD;AAAWe,MAAAA,QAAX;AAAoBJ,MAAAA;AAApB,KAAD,CAA5B;AACA;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAb,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAe,IAAAA,YAAY,CAACJ,QAAD,CAAZ;AACAK,IAAAA,eAAe,CAACJ,QAAD,CAAf;AACH,GAVD;;AAYA,MAAG,CAACf,YAAJ,EAAiB;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;;AAED,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEA,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAEQ,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKL,MAAM,iBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAL,CAHd,CADJ;AAOH,CA/CM","sourcesContent":["import React, {useEffect,useState} from 'react'\nimport {createDeckAndDraw, drawCardFromDeck} from './api'\nimport {CardLayout} from './Layout.component'\nimport { ButtonsTab } from './ButtonsTab'\nimport { compareValues } from './utils'\n\n\n\n\n\nexport const GameBoard = () => {\n\n    //states\n    const [cardState, setCardState] = useState({\n        cardValue:null,\n        cardImageUrl:null\n    })\n    const [deckId, setDeckId]=useState(null)\n    const [result,setResult]=useState(null)\n\n    //use effect sychonrous to prevent race conditions\n    useEffect(()=>{\n        const fetchCardandDeck = async () =>{\n            const {deckId, value, image} = await createDeckAndDraw();\n        }\n        fetchCardandDeck();\n        setCardState({\n            cardValue:value,\n            cardImageUrl:image\n        })\n        \n        setDeckId(deckId);\n    },[])\n\n    const onButtonClick = async (event) =>{\n        const bet=event.target.name\n        const {oldDeckId,newValue,newImage} = await drawCardFromDeck(deckId);\n        \n        const result = compareValues({cardValue,newValue,bet})\n        debugger\n        console.log(\"Button was clicked\")\n        setResult(result)\n        setCardValue(newValue)\n        setCardImageUrl(newImage)\n    }\n\n    if(!cardImageUrl){\n        return <h1>loading</h1>\n    }\n\n    return (\n        <CardLayout>\n            <img src={cardImageUrl}></img>\n            <ButtonsTab onButtonClick={onButtonClick}/>\n            {result &&<h2>{result}</h2>}\n        </CardLayout>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}