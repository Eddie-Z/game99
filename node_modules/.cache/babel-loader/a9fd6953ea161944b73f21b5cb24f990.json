{"ast":null,"code":"var _jsxFileName = \"/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createDeckAndDraw, drawCardFromDeck } from './api';\nimport { CardLayout } from './Layout.component';\nimport { ButtonsTab } from './ButtonsTab';\nimport { compareValues } from './utils';\nexport const GameBoard = () => {\n  const [cardImageUrl, setCardImageUrl] = useState(null);\n  const [cardValue, setCardValue] = useState(null);\n  const [deckId, setDeckId] = useState(null);\n  const [result, setResult] = useState(null);\n  useEffect(async () => {\n    const {\n      deckId,\n      value,\n      image\n    } = await createDeckAndDraw();\n    setCardImageUrl(image);\n    setCardValue(value);\n    setDeckId(deckId);\n  }, []);\n\n  const onButtonClick = async event => {\n    const bet = event.target.name;\n    const {\n      newValue,\n      newImage\n    } = await drawCardFromDeck(deckId);\n    const result = compareValues({\n      cardValue,\n      newValue,\n      bet\n    });\n    console.log(\"Button was clicked\");\n    setCardValue(newValue);\n    setCardImageUrl(newImage);\n  };\n\n  return /*#__PURE__*/React.createElement(CardLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cardImageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsTab, {\n    onButtonClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), result && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, `$result`));\n};","map":{"version":3,"sources":["/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js"],"names":["React","useEffect","useState","createDeckAndDraw","drawCardFromDeck","CardLayout","ButtonsTab","compareValues","GameBoard","cardImageUrl","setCardImageUrl","cardValue","setCardValue","deckId","setDeckId","result","setResult","value","image","onButtonClick","event","bet","target","name","newValue","newImage","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,OAAlD;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BR,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAAQC,SAAR,IAAmBd,QAAQ,CAAC,IAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAE,YAAU;AACjB,UAAK;AAACY,MAAAA,MAAD;AAASI,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,QAAyB,MAAMf,iBAAiB,EAArD;AACAO,IAAAA,eAAe,CAACQ,KAAD,CAAf;AACAN,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACAH,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GALQ,EAKP,EALO,CAAT;;AAOA,QAAMM,aAAa,GAAG,MAAOC,KAAP,IAAgB;AAClC,UAAMC,GAAG,GAACD,KAAK,CAACE,MAAN,CAAaC,IAAvB;AACA,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA;AAAV,QAAsB,MAAMrB,gBAAgB,CAACS,MAAD,CAAlD;AACA,UAAME,MAAM,GAAGR,aAAa,CAAC;AAACI,MAAAA,SAAD;AAAWa,MAAAA,QAAX;AAAoBH,MAAAA;AAApB,KAAD,CAA5B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAf,IAAAA,YAAY,CAACY,QAAD,CAAZ;AACAd,IAAAA,eAAe,CAACe,QAAD,CAAf;AACH,GAPD;;AASA,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEhB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAEU,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKJ,MAAM,iBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,SAAN,CAHd,CADJ;AAOH,CA7BM","sourcesContent":["import React, {useEffect,useState} from 'react'\nimport {createDeckAndDraw, drawCardFromDeck} from './api'\nimport {CardLayout} from './Layout.component'\nimport { ButtonsTab } from './ButtonsTab'\nimport { compareValues } from './utils'\n\n\n\n\n\nexport const GameBoard = () => {\n    const [cardImageUrl,setCardImageUrl]=useState(null)\n    const [cardValue,setCardValue]=useState(null)\n    const [deckId, setDeckId]=useState(null)\n    const [result,setResult]=useState(null)\n\n    useEffect( async ()=>{\n        const{deckId, value, image} = await createDeckAndDraw();\n        setCardImageUrl(image);\n        setCardValue(value);\n        setDeckId(deckId);\n    },[])\n\n    const onButtonClick = async (event) =>{\n        const bet=event.target.name\n        const {newValue,newImage} = await drawCardFromDeck(deckId);\n        const result = compareValues({cardValue,newValue,bet})\n        console.log(\"Button was clicked\")\n        setCardValue(newValue)\n        setCardImageUrl(newImage)\n    }\n\n    return (\n        <CardLayout>\n            <img src={cardImageUrl}></img>\n            <ButtonsTab onButtonClick={onButtonClick}/>\n            {result &&<h2>{`$result`}</h2>}\n        </CardLayout>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}