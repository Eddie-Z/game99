{"ast":null,"code":"var _jsxFileName = \"/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createDeckAndDraw } from './api';\nexport const GameBoard = () => {\n  const [cardImageUrl, setCardImageUrl] = useState(null);\n  const [cardValue, setCardValue] = useState(null);\n  const [deckId, setDeckId] = useState(null);\n  useEffect(async () => {\n    const {\n      deckId,\n      value,\n      image\n    } = await createDeckAndDraw();\n    setCardImageUrl(image);\n    setCardValue(value);\n    setDeckId(deckId);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Something\");\n};","map":{"version":3,"sources":["/Users/eddiezheng/Documents/GitHub/99/card/cardgame/src/GameBoard.js"],"names":["React","useEffect","useState","createDeckAndDraw","GameBoard","cardImageUrl","setCardImageUrl","cardValue","setCardValue","deckId","setDeckId","value","image"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,iBAAR,QAAgC,OAAhC;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BJ,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAAyBN,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAE,YAAU;AACjB,UAAK;AAACQ,MAAAA,MAAD;AAASE,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,QAAyB,MAAMT,iBAAiB,EAArD;AACAG,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACAD,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GALQ,EAKP,EALO,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAKH,CAhBM","sourcesContent":["import React, {useEffect,useState} from 'react'\nimport {createDeckAndDraw} from './api'\n\n\n\n\n\nexport const GameBoard = () => {\n    const [cardImageUrl,setCardImageUrl]=useState(null)\n    const [cardValue,setCardValue]=useState(null)\n    const [deckId, setDeckId]=useState(null)\n\n    useEffect( async ()=>{\n        const{deckId, value, image} = await createDeckAndDraw();\n        setCardImageUrl(image);\n        setCardValue(value);\n        setDeckId(deckId);\n    },[])\n    return (\n        <div>\n            Something\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}